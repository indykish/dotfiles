---
- name: Workstation Setup
  hosts: localhost
  gather_facts: true
  become: false

  vars:
    install_dir: "{{ ansible_env.HOME }}/bin"
    version_log: "{{ ansible_env.HOME }}/dotfile-run.txt"

  tasks:
    - name: Ensure required directories exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ install_dir }}"
        - "{{ ansible_env.HOME }}/code/py"
        - "{{ ansible_env.HOME }}/code/node"
        - "{{ ansible_env.HOME }}/code/rust"
        - "{{ ansible_env.HOME }}/.config/autostart"

    - name: Ensure git is installed for AUR build
      pacman:
        name: git
        state: present

    - name: Clone trizen AUR repository
      git:
        repo: https://aur.archlinux.org/trizen.git
        dest: "{{ ansible_env.HOME }}/aur-builds/trizen"
        clone: yes
        update: no

    - name: Build and install trizen from AUR
      become: false
      shell: |
        cd "{{ ansible_env.HOME }}/aur-builds/trizen"
        makepkg -si --noconfirm
      args:
        creates: /usr/bin/trizen

    - name: Install oh-my-posh and Nerd Fonts using trizen
      shell: |
        trizen -Syy
        curl -s https://ohmyposh.dev/install.sh | bash -s -- -d ~/bin
        trizen -S --noconfirm ttf-nerd-fonts-symbols ttf-nerd-fonts-symbols-common
      args:
        executable: /bin/bash

    - name: Initialize oh-my-posh with jandedobbeleer them in bashrc if not already present
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'eval "$(oh-my-posh init bash --config ~/.cache/oh-my-posh/themes/jandedobbeleer.omp.json)"'
        state: present
        create: yes

    - name: Install libreoffice
      shell: |
        trizen -S --noconfirm libreoffice-fresh
      args:
        executable: /bin/bash  
      
    - name: Install Flameshot
      shell: |
        trizen -S --noconfirm flameshot
      args:
        executable: /bin/bash  

    - name: Use mise to install tools and languages
      shell: |
        mise install -v caddy shellcheck jq shfmt python node ruby rust cargo mkcert cfssl go 
        mise use -g -v caddy shellcheck jq shfmt python node ruby rust cargo mkcert cfssl go
        mise list -v > {{ version_log }}
      args:
        executable: /bin/bash

    - name: Install VSCode
      become: true
      pacman:
        name: code
        state: present

    - name: Install Docker tools
      shell: |
        trizen -S --noconfirm docker docker-buildx docker-compose
      args:
        executable: /bin/bash

    - name: Copy custom .gemrc
      copy:
        content: |
          :backtrace: false
          :bulk_threshold: 1000
          :sources:
          - https://rubygems.org
          :update_sources: true
          :verbose: true
        dest: "{{ ansible_env.HOME }}/.gemrc"
        mode: "0644"

    - name: Download .gitconfig
      get_url:
        url: https://raw.githubusercontent.com/indykish/dotfiles/master/.gitconfig
        dest: "{{ ansible_env.HOME }}/.gitconfig"
        mode: "0644"

    - name: Download .gitignore_global
      get_url:
        url: https://raw.githubusercontent.com/indykish/dotfiles/master/.gitignore_global
        dest: "{{ ansible_env.HOME }}/.gitignore_global"
        mode: "0644"

    - name: Download PlantUML jar
      get_url:
        url: "https://github.com/plantuml/plantuml/releases/download/v1.2025.2/plantuml.jar"
        dest: "{{ install_dir }}/plantuml.jar"
        mode: "0644"

    - name: Install Eclipse Temurin JDK
      shell: |
        trizen -S --noconfirm jdk-temurin
      args:
        executable: /bin/bash


    - name: Install Gnome App Indicator
      become: true
      pacman: 
          name: 
            - gnome-shell-extensions 
            - gnome-tweaks 
            - gnome-shell-extension-appindicator
          state: present
